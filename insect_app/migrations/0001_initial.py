# Generated by Django 5.2.4 on 2025-08-06 16:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Humedad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('humedad', models.DecimalField(decimal_places=1, default=0.0, max_digits=5, null=True)),
                ('max_humedad', models.DecimalField(decimal_places=1, default=0.0, max_digits=5, null=True)),
                ('min_humedad', models.DecimalField(decimal_places=1, default=0.0, max_digits=5, null=True)),
                ('hora', models.TimeField()),
                ('area_de_trabajo', models.CharField(max_length=20)),
                ('obs', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField()),
                ('fecha_actualizacion', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Mortalidad_pupas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cepa', models.CharField(max_length=50)),
                ('cantidad', models.IntegerField(help_text='Cantidad de pupas muertas registradas.')),
                ('obs', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField()),
                ('fecha_actualizacion', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='RegistroTemperaturaAgua',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(help_text='Fecha en la que se realizó el registro.', verbose_name='Fecha del Registro')),
                ('especie', models.CharField(help_text='Especie del mosquito.', max_length=100, verbose_name='Especie')),
                ('cepa', models.CharField(help_text='Cepa del mosquito.', max_length=100, verbose_name='Cepa')),
                ('fecha_bandeja', models.DateField(help_text='Fecha de creación o inicio de la bandeja.', verbose_name='Fecha de Bandeja')),
                ('temp_730am', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura del agua a las 7:30 AM.', max_digits=5, null=True, verbose_name='Temp. 7:30 AM (°C)')),
                ('temp_max_730am', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura máxima registrada a las 7:30 AM.', max_digits=5, null=True, verbose_name='Temp. Máx. 7:30 AM (°C)')),
                ('temp_min_730am', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura mínima registrada a las 7:30 AM.', max_digits=5, null=True, verbose_name='Temp. Mín. 7:30 AM (°C)')),
                ('temp_1200md', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura del agua a las 12:00 MD.', max_digits=5, null=True, verbose_name='Temp. 12:00 MD (°C)')),
                ('temp_max_1200md', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura máxima registrada a las 12:00 MD.', max_digits=5, null=True, verbose_name='Temp. Máx. 12:00 MD (°C)')),
                ('temp_min_1200md', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura mínima registrada a las 12:00 MD.', max_digits=5, null=True, verbose_name='Temp. Mín. 12:00 MD (°C)')),
                ('temp_1500pm', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura del agua a las 15:00 PM.', max_digits=5, null=True, verbose_name='Temp. 15:00 PM (°C)')),
                ('temp_max_1500pm', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura máxima registrada a las 15:00 PM.', max_digits=5, null=True, verbose_name='Temp. Máx. 15:00 PM (°C)')),
                ('temp_min_1500pm', models.DecimalField(blank=True, decimal_places=2, help_text='Temperatura mínima registrada a las 15:00 PM.', max_digits=5, null=True, verbose_name='Temp. Mín. 15:00 PM (°C)')),
                ('observaciones', models.TextField(blank=True, help_text='Cualquier observación adicional sobre el registro.', verbose_name='Observaciones')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Registro de Temperatura del Agua',
                'verbose_name_plural': 'Registros de Temperatura del Agua',
                'ordering': ['-fecha', 'especie', 'cepa'],
            },
        ),
        migrations.CreateModel(
            name='Temperatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperatura', models.DecimalField(decimal_places=1, default=0.0, max_digits=5, null=True)),
                ('max_temperatura', models.DecimalField(decimal_places=1, default=0.0, max_digits=5, null=True)),
                ('min_temperatura', models.DecimalField(decimal_places=1, default=0.0, max_digits=5, null=True)),
                ('hora', models.TimeField()),
                ('area_de_trabajo', models.CharField(max_length=20)),
                ('obs', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField()),
                ('fecha_actualizacion', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Vida',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especie', models.CharField(max_length=50)),
                ('cepa', models.CharField(max_length=50)),
                ('fecha_inicio_bandejas', models.DateField(blank=True, help_text='Fecha de inicio de las bandejas.', null=True)),
                ('fecha_pupacion', models.DateField(blank=True, help_text='Fecha en que las larvas comenzaron a pupar.', null=True)),
                ('numero_bandejas_antes_trabajo', models.IntegerField(help_text='Número de bandejas encontradas antes del trabajo.')),
                ('pupas_vivas', models.IntegerField(help_text='Cantidad de pupas vivas.')),
                ('pupas_muertas', models.IntegerField(help_text='Cantidad de pupas muertas.')),
                ('total_pupas_vivas_y_muertas', models.IntegerField(help_text='Total de pupas vivas y muertas.')),
                ('larvas_muertas', models.IntegerField(help_text='Cantidad de larvas muertas.')),
                ('bandejas_divididas', models.IntegerField(help_text='Número de bandejas que fueron divididas.')),
                ('bandejas_existentes_despues_trabajo', models.IntegerField(help_text='Número de bandejas existentes después de realizar el trabajo.')),
                ('am_pm_pupas_vivas', models.CharField(help_text='Indicador (AM/PM) para el registro de pupas vivas.', max_length=2)),
                ('am_pm_pupas_muertas', models.CharField(help_text='Indicador (AM/PM) para el registro de pupas muertas.', max_length=2)),
                ('am_pm_larvas_muertas', models.CharField(help_text='Indicador (AM/PM) para el registro de larvas muertas.', max_length=2)),
                ('tiempo_bandeja', models.CharField(help_text='Tiempo registrado para la bandeja (minutos y hora).', max_length=25)),
                ('obs', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField()),
                ('fecha_actualizacion', models.DateTimeField()),
            ],
        ),
    ]
